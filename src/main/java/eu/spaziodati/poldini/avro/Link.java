/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package eu.spaziodati.poldini.avro;  
@SuppressWarnings("all")
/** doc */
@org.apache.avro.specific.AvroGenerated
public class Link extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Edge\",\"namespace\":\"eu.spaziodati.poldini.avro\",\"doc\":\"doc\",\"fields\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"links\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence url;
  @Deprecated public java.util.List<java.lang.CharSequence> links;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Link() {}

  /**
   * All-args constructor.
   */
  public Link(java.lang.CharSequence url, java.util.List<java.lang.CharSequence> links) {
    this.url = url;
    this.links = links;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return url;
    case 1: return links;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: url = (java.lang.CharSequence)value$; break;
    case 1: links = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'url' field.
   */
  public java.lang.CharSequence getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(java.lang.CharSequence value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'links' field.
   */
  public java.util.List<java.lang.CharSequence> getLinks() {
    return links;
  }

  /**
   * Sets the value of the 'links' field.
   * @param value the value to set.
   */
  public void setLinks(java.util.List<java.lang.CharSequence> value) {
    this.links = value;
  }

  /** Creates a new Edge RecordBuilder */
  public static eu.spaziodati.poldini.avro.Link.Builder newBuilder() {
    return new eu.spaziodati.poldini.avro.Link.Builder();
  }
  
  /** Creates a new Edge RecordBuilder by copying an existing Builder */
  public static eu.spaziodati.poldini.avro.Link.Builder newBuilder(eu.spaziodati.poldini.avro.Link.Builder other) {
    return new eu.spaziodati.poldini.avro.Link.Builder(other);
  }
  
  /** Creates a new Edge RecordBuilder by copying an existing Edge instance */
  public static eu.spaziodati.poldini.avro.Link.Builder newBuilder(eu.spaziodati.poldini.avro.Link other) {
    return new eu.spaziodati.poldini.avro.Link.Builder(other);
  }
  
  /**
   * RecordBuilder for Edge instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Link>
    implements org.apache.avro.data.RecordBuilder<Link> {

    private java.lang.CharSequence url;
    private java.util.List<java.lang.CharSequence> links;

    /** Creates a new Builder */
    private Builder() {
      super(eu.spaziodati.poldini.avro.Link.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(eu.spaziodati.poldini.avro.Link.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.url)) {
        this.url = data().deepCopy(fields()[0].schema(), other.url);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.links)) {
        this.links = data().deepCopy(fields()[1].schema(), other.links);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Edge instance */
    private Builder(eu.spaziodati.poldini.avro.Link other) {
            super(eu.spaziodati.poldini.avro.Link.SCHEMA$);
      if (isValidValue(fields()[0], other.url)) {
        this.url = data().deepCopy(fields()[0].schema(), other.url);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.links)) {
        this.links = data().deepCopy(fields()[1].schema(), other.links);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'url' field */
    public java.lang.CharSequence getUrl() {
      return url;
    }
    
    /** Sets the value of the 'url' field */
    public eu.spaziodati.poldini.avro.Link.Builder setUrl(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.url = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'url' field has been set */
    public boolean hasUrl() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'url' field */
    public eu.spaziodati.poldini.avro.Link.Builder clearUrl() {
      url = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'links' field */
    public java.util.List<java.lang.CharSequence> getLinks() {
      return links;
    }
    
    /** Sets the value of the 'links' field */
    public eu.spaziodati.poldini.avro.Link.Builder setLinks(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[1], value);
      this.links = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'links' field has been set */
    public boolean hasLinks() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'links' field */
    public eu.spaziodati.poldini.avro.Link.Builder clearLinks() {
      links = null;
      fieldSetFlags()[1] = false;
      return this;
    }

//    @Override
    public Link build() {
      try {
        Link record = new Link();
        record.url = fieldSetFlags()[0] ? this.url : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.links = fieldSetFlags()[1] ? this.links : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
