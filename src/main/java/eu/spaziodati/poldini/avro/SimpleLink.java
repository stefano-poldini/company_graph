/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package eu.spaziodati.poldini.avro;  
@SuppressWarnings("all")
/** doc */
@org.apache.avro.specific.AvroGenerated
public class SimpleLink extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SingleLink\",\"namespace\":\"eu.spaziodati.poldini.avro\",\"doc\":\"doc\",\"fields\":[{\"name\":\"source\",\"type\":\"string\"},{\"name\":\"target\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence source;
  @Deprecated public java.lang.CharSequence target;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SimpleLink() {}

  /**
   * All-args constructor.
   */
  public SimpleLink(java.lang.CharSequence source, java.lang.CharSequence target) {
    this.source = source;
    this.target = target;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return source;
    case 1: return target;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: source = (java.lang.CharSequence)value$; break;
    case 1: target = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'source' field.
   */
  public java.lang.CharSequence getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'target' field.
   */
  public java.lang.CharSequence getTarget() {
    return target;
  }

  /**
   * Sets the value of the 'target' field.
   * @param value the value to set.
   */
  public void setTarget(java.lang.CharSequence value) {
    this.target = value;
  }

  /** Creates a new SingleLink RecordBuilder */
  public static eu.spaziodati.poldini.avro.SimpleLink.Builder newBuilder() {
    return new eu.spaziodati.poldini.avro.SimpleLink.Builder();
  }
  
  /** Creates a new SingleLink RecordBuilder by copying an existing Builder */
  public static eu.spaziodati.poldini.avro.SimpleLink.Builder newBuilder(eu.spaziodati.poldini.avro.SimpleLink.Builder other) {
    return new eu.spaziodati.poldini.avro.SimpleLink.Builder(other);
  }
  
  /** Creates a new SingleLink RecordBuilder by copying an existing SingleLink instance */
  public static eu.spaziodati.poldini.avro.SimpleLink.Builder newBuilder(eu.spaziodati.poldini.avro.SimpleLink other) {
    return new eu.spaziodati.poldini.avro.SimpleLink.Builder(other);
  }
  
  /**
   * RecordBuilder for SingleLink instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SimpleLink>
    implements org.apache.avro.data.RecordBuilder<SimpleLink> {

    private java.lang.CharSequence source;
    private java.lang.CharSequence target;

    /** Creates a new Builder */
    private Builder() {
      super(eu.spaziodati.poldini.avro.SimpleLink.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(eu.spaziodati.poldini.avro.SimpleLink.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.source)) {
        this.source = data().deepCopy(fields()[0].schema(), other.source);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.target)) {
        this.target = data().deepCopy(fields()[1].schema(), other.target);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SingleLink instance */
    private Builder(eu.spaziodati.poldini.avro.SimpleLink other) {
            super(eu.spaziodati.poldini.avro.SimpleLink.SCHEMA$);
      if (isValidValue(fields()[0], other.source)) {
        this.source = data().deepCopy(fields()[0].schema(), other.source);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.target)) {
        this.target = data().deepCopy(fields()[1].schema(), other.target);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'source' field */
    public java.lang.CharSequence getSource() {
      return source;
    }
    
    /** Sets the value of the 'source' field */
    public eu.spaziodati.poldini.avro.SimpleLink.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.source = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'source' field has been set */
    public boolean hasSource() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'source' field */
    public eu.spaziodati.poldini.avro.SimpleLink.Builder clearSource() {
      source = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'target' field */
    public java.lang.CharSequence getTarget() {
      return target;
    }
    
    /** Sets the value of the 'target' field */
    public eu.spaziodati.poldini.avro.SimpleLink.Builder setTarget(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.target = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'target' field has been set */
    public boolean hasTarget() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'target' field */
    public eu.spaziodati.poldini.avro.SimpleLink.Builder clearTarget() {
      target = null;
      fieldSetFlags()[1] = false;
      return this;
    }

//    @Override
    public SimpleLink build() {
      try {
        SimpleLink record = new SimpleLink();
        record.source = fieldSetFlags()[0] ? this.source : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.target = fieldSetFlags()[1] ? this.target : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
